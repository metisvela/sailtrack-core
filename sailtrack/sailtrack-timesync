#!/usr/bin/env python3

import json
import logging
import time
from configparser import ConfigParser

from paho.mqtt.client import Client

# -------------------------- Configuration -------------------------- #

MQTT_CLIENT_ID = "sailtrack-timesync"
CONFIG_FILE_PATH = "/etc/sailtrack/sailtrack.conf"

# ------------------------------------------------------------------- #


def on_message_callback(client, userdata, message):
    doc = json.loads(message.payload)
    if "epoch" in doc and doc["epoch"]:
        logger.info(f"Received epoch: {doc['epoch']}")
        time.clock_settime(time.CLOCK_REALTIME, doc["epoch"])
        logger.info("Time synced successfully!")
        logger.info("Exiting...")
        exit()


config = ConfigParser()
config.read(CONFIG_FILE_PATH)
mqtt = Client(MQTT_CLIENT_ID)
mqtt.username_pw_set(config["mqtt"]["username"], config["mqtt"]["password"])
mqtt.on_message = on_message_callback
mqtt.connect(config["mqtt"]["host"])
mqtt.subscribe("sensor/gps0")
logger = logging.getLogger(MQTT_CLIENT_ID)
logger.setLevel(logging.INFO)
handler = logging.StreamHandler()
handler.setFormatter(logging.Formatter(config.get("log", "format", raw=True)))
logger.addHandler(handler)
logger.info("Waiting for epoch...")
mqtt.loop_forever()
